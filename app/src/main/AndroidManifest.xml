<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    package="uk.co.summermadness.sm16">

    <!-- This min sdk is also declared in gradle.build -->
    <!-- Removed:  com.google.android.gms.gcm,  -->
    <uses-sdk android:minSdkVersion="7" tools:overrideLibrary="com.google.android.gms.base, com.google.android.gms, com.google.firebase, com.google.android.gms.tasks, com.google.android.gms.iid, com.google.firebase.messaging, com.google.firebase.iid, com.google.firebase.firebase_core, com.google.android.gms.measurement, com.google.android.gms.measurement.impl, com.google.firebase.crash" />


    <!-- my application version is stored in build.gradle (Module: app) file. alternatively can store in the manifest above with package as:
    android:versionCode="2"
    android:versionName="1.1"
    -->

    <!-- If not using gradle/Android studio, be sure to replace YOUR-PACKAGE-NAME with your actual package name, for example: com.google.android.
     If you're using a gradle based build, the ${applicationId} macro will automatically do that for you.  -->
    <!-- The following permissions are for the Batch.com push notification service -->
    <uses-permission android:name="android.permission.INTERNET" />

    <!-- Although the firebase cloud messenging quickstart example doesn't have these permissions, so maybe not needed for FCM: https://github.com/firebase/quickstart-android/blob/master/messaging/app/src/main/AndroidManifest.xml -->

    <!-- The following three were needed by GCM and Batch, but not by FCM as "all the permissions needed by FCM are now added automatically by the library" -->
    <!-- permission android:name="${applicationId}.permission.C2D_MESSAGE" android:protectionLevel="signature"/ -->
    <!-- "These 4 permissions will not show up in the PlayStore, so you don't need to worry about users asking about them." -->
    <!-- uses-permission android:name="${applicationId}.permission.C2D_MESSAGE"/ -->
    <!-- uses-permission android:name="android.permission.WAKE_LOCK" / -->
    <!-- The following permissions probably aren't needed by FCM either: -->
    <uses-permission android:name="android.permission.VIBRATE" />
    <uses-permission android:name="com.google.android.c2dm.permission.RECEIVE"/>

    <!-- Need these setting to pull data from internet - the first is already set above for Batch.com -->
    <!--  uses-permission android:name="android.permission.INTERNET" / -->
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />

    <!-- Added the following to permit min-sdk of 7 (as gms requires 9).
    Also added the "xmlns:tools=..." at top
    Can use commas if several libraries, eg: ...="com.example.lib1, com.example.lib2" -->


    <!-- Added the SmApp name below - as Activity class is needed by batch -->
    <!-- Theme was:    android:theme="@style/Theme.AppCompat.Light.NoActionBar" -->
    <!-- But using: @style/AppTheme gave debug error and crash:
    java.lang.RuntimeException: Unable to start activity ComponentInfo{uk.co.summermadness.sm16/uk.co.summermadness.sm16.MainActivity}: java.lang.IllegalStateException:
    This Activity already has an action bar supplied by the window decor. Do not request Window.FEATURE_SUPPORT_ACTION_BAR and set windowActionBar to false in your theme to use a Toolbar instead.
    -->

<!-- Nolonger using the SmApp subclass:         android:name=".SmApp" -->

    <application
        android:theme="@style/AppTheme"
        android:allowBackup="true"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:supportsRtl="true">

        <!-- meta-data
            android:name="com.google.android.gms.version"
            android:value="@integer/google_play_services_version" / -->

        <!-- Locking the screen orientation for simplicity for now, as otherwise need to rearrange the custom dialog layout  in code -->
        <activity android:name=".MainActivity"
            android:label="@string/app_name"
            android:screenOrientation="portrait">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>



        <!-- The following is for GCM and Batch.com push notifications -->
        <!-- service android:name="com.batch.android.BatchPushService" />
        <receiver android:name="com.batch.android.BatchPushReceiver" android:permission="com.google.android.c2dm.permission.SEND">
            <intent-filter>
                <action android:name="com.google.android.c2dm.intent.RECEIVE" />
                <category android:name="${applicationId}" />
            </intent-filter>
        </receiver-->

        <!-- [START firebase_service] -->
        <!-- See: https://firebase.google.com/docs/cloud-messaging/android/client -->
        <!-- A service that extends FirebaseMessagingService. This is required if you want to do any message handling beyond receiving notifications on apps in the background. To receive notifications in foregrounded apps, to receive data payload, to send upstream messages, and so on, you must extend this service.  -->
        <service
            android:name=".MyFirebaseMessagingService">
            <intent-filter>
                <action android:name="com.google.firebase.MESSAGING_EVENT"/>
            </intent-filter>
        </service>
        <!-- [END firebase_service] -->
        <!-- [START firebase_iid_service] -->
        <!-- A service that extends FirebaseInstanceIdService to handle the creation, rotation, and updating of registration tokens. This is required for sending to specific devices or for creating device groups. -->
<!-- Disabled the ID service as currently sending notifications to all users that subscribed to a topic -->
        <service
            android:name=".MyFirebaseInstanceIDService">
            <intent-filter>
                <action android:name="com.google.firebase.INSTANCE_ID_EVENT"/>
            </intent-filter>
        </service>
        <!-- [END firebase_iid_service] -->

    </application>

</manifest>
